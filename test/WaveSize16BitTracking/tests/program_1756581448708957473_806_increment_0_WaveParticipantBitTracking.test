#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(32, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  for (uint i0 = 0; (i0 < 3); i0 = (i0 + 1)) {
    if ((WaveGetLaneIndex() == 2)) {
      result = (result + WaveActiveMax(result));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = ((14 << 6) | (i0 << 4));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
    uint counter1 = 0;
    while ((counter1 < 3)) {
      counter1 = (counter1 + 1);
      if ((((WaveGetLaneIndex() == 5) || (WaveGetLaneIndex() == 11)) || (WaveGetLaneIndex() == 15))) {
        result = (result + WaveActiveSum(8));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = (((36 << 6) | (i0 << 4)) | (counter1 << 2));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
      if (((WaveGetLaneIndex() < 4) || (WaveGetLaneIndex() >= 10))) {
        if (((WaveGetLaneIndex() < 5) || (WaveGetLaneIndex() >= 11))) {
          result = (result + WaveActiveMin(result));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = (((54 << 6) | (i0 << 4)) | (counter1 << 2));
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
      } else {
      if ((((WaveGetLaneIndex() == 1) || (WaveGetLaneIndex() == 11)) || (WaveGetLaneIndex() == 15))) {
        result = (result + WaveActiveMin(WaveGetLaneIndex()));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = (((69 << 6) | (i0 << 4)) | (counter1 << 2));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
    }
    if ((((WaveGetLaneIndex() == 1) || (WaveGetLaneIndex() == 9)) || (WaveGetLaneIndex() == 2))) {
      result = (result + WaveActiveMax(result));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = (((84 << 6) | (i0 << 4)) | (counter1 << 2));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
  }
  if ((WaveGetLaneIndex() == 7)) {
    result = (result + WaveActiveMin(result));
    uint temp = 0;
    InterlockedAdd(_wave_op_index[0], 3, temp);
    _participant_bit[temp] = ((91 << 6) | (i0 << 4));
    uint4 ballot = WaveActiveBallot(1);
    _participant_bit[(temp + 1)] = ballot.x;
    _participant_bit[(temp + 2)] = ballot.y;
  }
  if ((i0 == 1)) {
    continue;
  }
  if ((i0 == 2)) {
    break;
  }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 32 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 846
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [896, 4, 0, 912, 4, 0, 928, 4, 0, 2308, 34848, 0, 2308, 34848, 0, 2308, 34848, 0, 2312, 34848, 0, 2312, 34848, 0, 2312, 34848, 0, 2316, 34848, 0, 2316, 34848, 0, 2316, 34848, 0, 2324, 34848, 0, 2324, 34848, 0, 2324, 34848, 0, 2328, 34848, 0, 2328, 34848, 0, 2328, 34848, 0, 2332, 34848, 0, 2332, 34848, 0, 2332, 34848, 0, 2340, 34848, 0, 2340, 34848, 0, 2340, 34848, 0, 2344, 34848, 0, 2344, 34848, 0, 2344, 34848, 0, 2348, 34848, 0, 2348, 34848, 0, 2348, 34848, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 5380, 518, 0, 5380, 518, 0, 5380, 518, 0, 5384, 518, 0, 5384, 518, 0, 5384, 518, 0, 5388, 518, 0, 5388, 518, 0, 5388, 518, 0, 5396, 518, 0, 5396, 518, 0, 5396, 518, 0, 5400, 518, 0, 5400, 518, 0, 5400, 518, 0, 5404, 518, 0, 5404, 518, 0, 5404, 518, 0, 5412, 518, 0, 5412, 518, 0, 5412, 518, 0, 5416, 518, 0, 5416, 518, 0, 5416, 518, 0, 5420, 518, 0, 5420, 518, 0, 5420, 518, 0, 5824, 128, 0, 5840, 128, 0, 5856, 128, 0, 896, 4, 0, 912, 4, 0, 928, 4, 0, 2308, 34848, 0, 2308, 34848, 0, 2308, 34848, 0, 2312, 34848, 0, 2312, 34848, 0, 2312, 34848, 0, 2316, 34848, 0, 2316, 34848, 0, 2316, 34848, 0, 2324, 34848, 0, 2324, 34848, 0, 2324, 34848, 0, 2328, 34848, 0, 2328, 34848, 0, 2328, 34848, 0, 2332, 34848, 0, 2332, 34848, 0, 2332, 34848, 0, 2340, 34848, 0, 2340, 34848, 0, 2340, 34848, 0, 2344, 34848, 0, 2344, 34848, 0, 2344, 34848, 0, 2348, 34848, 0, 2348, 34848, 0, 2348, 34848, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3460, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3464, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3468, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3476, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3480, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3484, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3492, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3496, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 3500, 63503, 0, 5380, 518, 0, 5380, 518, 0, 5380, 518, 0, 5384, 518, 0, 5384, 518, 0, 5384, 518, 0, 5388, 518, 0, 5388, 518, 0, 5388, 518, 0, 5396, 518, 0, 5396, 518, 0, 5396, 518, 0, 5400, 518, 0, 5400, 518, 0, 5400, 518, 0, 5404, 518, 0, 5404, 518, 0, 5404, 518, 0, 5412, 518, 0, 5412, 518, 0, 5412, 518, 0, 5416, 518, 0, 5416, 518, 0, 5416, 518, 0, 5420, 518, 0, 5420, 518, 0, 5420, 518, 0, 5824, 128, 0, 5840, 128, 0, 5856, 128, 0]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
