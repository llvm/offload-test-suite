#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  for (uint i0 = 0; (i0 < 2); i0 = (i0 + 1)) {
    if ((((WaveGetLaneIndex() == 2) || (WaveGetLaneIndex() == 34)) || (WaveGetLaneIndex() == 57))) {
      result = (result + WaveActiveSum(7));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = ((22 << 6) | (i0 << 4));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
    if (((WaveGetLaneIndex() == 30) || (WaveGetLaneIndex() == 57))) {
      if ((((WaveGetLaneIndex() == 14) || (WaveGetLaneIndex() == 22)) || (WaveGetLaneIndex() == 43))) {
        result = (result + WaveActiveMax((WaveGetLaneIndex() + 3)));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = ((46 << 6) | (i0 << 4));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
    } else {
    if (((WaveGetLaneIndex() < 4) || (WaveGetLaneIndex() >= 48))) {
      result = (result + WaveActiveSum(result));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = ((57 << 6) | (i0 << 4));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
    if ((WaveGetLaneIndex() >= 42)) {
      if ((WaveGetLaneIndex() < 18)) {
        result = (result + WaveActiveMax(WaveGetLaneIndex()));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = ((67 << 6) | (i0 << 4));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
      for (uint i1 = 0; (i1 < 2); i1 = (i1 + 1)) {
        if ((WaveGetLaneIndex() == 43)) {
          result = (result + WaveActiveSum(WaveGetLaneIndex()));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = (((82 << 6) | (i0 << 4)) | (i1 << 2));
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
        if ((i1 == 1)) {
          continue;
        }
      }
    }
  }
  if ((i0 == 1)) {
    continue;
  }
  if ((i0 == 1)) {
    break;
  }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 144
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [1408, 4, 33554436, 1408, 4, 33554436, 1408, 4, 33554436, 1424, 4, 33554436, 1424, 4, 33554436, 1424, 4, 33554436, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3648, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 3664, 15, 4261347328, 5248, 0, 2048, 5252, 0, 2048, 5264, 0, 2048, 5268, 0, 2048]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
