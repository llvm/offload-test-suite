#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  switch ((WaveGetLaneIndex() % 2)) {
  case 0: {
      if ((WaveGetLaneIndex() < 8)) {
        result = (result + WaveActiveSum(1));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = (9 << 6);
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
      break;
    }
  case 1: {
      uint counter0 = 0;
      while ((counter0 < 3)) {
        counter0 = (counter0 + 1);
        uint counter1 = 0;
        while ((counter1 < 3)) {
          counter1 = (counter1 + 1);
          if (((WaveGetLaneIndex() < 20) || (WaveGetLaneIndex() >= 52))) {
            result = (result + WaveActiveMin(result));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((34 << 6) | (counter0 << 4)) | (counter1 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
          switch ((WaveGetLaneIndex() % 4)) {
          case 0: {
              if ((WaveGetLaneIndex() < 8)) {
                result = (result + WaveActiveSum(1));
                uint temp = 0;
                InterlockedAdd(_wave_op_index[0], 3, temp);
                _participant_bit[temp] = (((44 << 6) | (counter0 << 4)) | (counter1 << 2));
                uint4 ballot = WaveActiveBallot(1);
                _participant_bit[(temp + 1)] = ballot.x;
                _participant_bit[(temp + 2)] = ballot.y;
              }
              break;
            }
          case 1: {
              if (((WaveGetLaneIndex() % 2) == 0)) {
                result = (result + WaveActiveSum(2));
                uint temp = 0;
                InterlockedAdd(_wave_op_index[0], 3, temp);
                _participant_bit[temp] = (((53 << 6) | (counter0 << 4)) | (counter1 << 2));
                uint4 ballot = WaveActiveBallot(1);
                _participant_bit[(temp + 1)] = ballot.x;
                _participant_bit[(temp + 2)] = ballot.y;
              }
              break;
            }
          case 2: {
              if (true) {
                result = (result + WaveActiveSum(3));
                uint temp = 0;
                InterlockedAdd(_wave_op_index[0], 3, temp);
                _participant_bit[temp] = (((58 << 6) | (counter0 << 4)) | (counter1 << 2));
                uint4 ballot = WaveActiveBallot(1);
                _participant_bit[(temp + 1)] = ballot.x;
                _participant_bit[(temp + 2)] = ballot.y;
              }
              break;
            }
          case 3: {
              if ((WaveGetLaneIndex() < 20)) {
                result = (result + WaveActiveSum(4));
                uint temp = 0;
                InterlockedAdd(_wave_op_index[0], 3, temp);
                _participant_bit[temp] = (((65 << 6) | (counter0 << 4)) | (counter1 << 2));
                uint4 ballot = WaveActiveBallot(1);
                _participant_bit[(temp + 1)] = ballot.x;
                _participant_bit[(temp + 2)] = ballot.y;
              }
              break;
            }
          default: {
              result = (result + WaveActiveSum(99));
              uint temp = 0;
              InterlockedAdd(_wave_op_index[0], 3, temp);
              _participant_bit[temp] = (((69 << 6) | (counter0 << 4)) | (counter1 << 2));
              uint4 ballot = WaveActiveBallot(1);
              _participant_bit[(temp + 1)] = ballot.x;
              _participant_bit[(temp + 2)] = ballot.y;
              break;
            }
          }
        }
      }
      break;
    }
  default: {
      result = (result + WaveActiveSum(99));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = (73 << 6);
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
      break;
    }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 579
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [576, 85, 0, 576, 85, 0, 576, 85, 0, 576, 85, 0, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2196, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2200, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2204, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2212, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2216, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2220, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2228, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2232, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 2236, 699050, 2862612480, 4180, 559240, 0, 4180, 559240, 0, 4180, 559240, 0, 4180, 559240, 0, 4180, 559240, 0, 4184, 559240, 0, 4184, 559240, 0, 4184, 559240, 0, 4184, 559240, 0, 4184, 559240, 0, 4188, 559240, 0, 4188, 559240, 0, 4188, 559240, 0, 4188, 559240, 0, 4188, 559240, 0, 4196, 559240, 0, 4196, 559240, 0, 4196, 559240, 0, 4196, 559240, 0, 4196, 559240, 0, 4200, 559240, 0, 4200, 559240, 0, 4200, 559240, 0, 4200, 559240, 0, 4200, 559240, 0, 4204, 559240, 0, 4204, 559240, 0, 4204, 559240, 0, 4204, 559240, 0, 4204, 559240, 0, 4212, 559240, 0, 4212, 559240, 0, 4212, 559240, 0, 4212, 559240, 0, 4212, 559240, 0, 4216, 559240, 0, 4216, 559240, 0, 4216, 559240, 0, 4216, 559240, 0, 4216, 559240, 0, 4220, 559240, 0, 4220, 559240, 0, 4220, 559240, 0, 4220, 559240, 0, 4220, 559240, 0]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
