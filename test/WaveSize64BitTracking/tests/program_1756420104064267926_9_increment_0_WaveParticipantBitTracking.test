#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  switch ((WaveGetLaneIndex() % 2)) {
  case 0: {
      for (uint i0 = 0; (i0 < 2); i0 = (i0 + 1)) {
        if ((WaveGetLaneIndex() == 58)) {
          result = (result + WaveActiveMin(4));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = ((17 << 6) | (i0 << 4));
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
        if ((((WaveGetLaneIndex() == 12) || (WaveGetLaneIndex() == 39)) || (WaveGetLaneIndex() == 35))) {
          if ((((WaveGetLaneIndex() == 21) || (WaveGetLaneIndex() == 51)) || (WaveGetLaneIndex() == 39))) {
            result = (result + WaveActiveSum(result));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = ((43 << 6) | (i0 << 4));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
        }
        if ((i0 == 1)) {
          continue;
        }
      }
      break;
    }
  case 1: {
      for (uint i1 = 0; (i1 < 3); i1 = (i1 + 1)) {
        if ((WaveGetLaneIndex() == 61)) {
          result = (result + WaveActiveMin(3));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = ((61 << 6) | (i1 << 4));
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
        uint counter2 = 0;
        while ((counter2 < 2)) {
          counter2 = (counter2 + 1);
          if (((WaveGetLaneIndex() < 11) || (WaveGetLaneIndex() >= 59))) {
            result = (result + WaveActiveSum(result));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((79 << 6) | (i1 << 4)) | (counter2 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
          if (((WaveGetLaneIndex() < 16) || (WaveGetLaneIndex() >= 56))) {
            result = (result + WaveActiveSum(8));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((90 << 6) | (i1 << 4)) | (counter2 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
        }
      }
      break;
    }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 375
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [1088, 0, 67108864, 1104, 0, 67108864, 3904, 0, 536870912, 3920, 0, 536870912, 3936, 0, 536870912, 5060, 682, 2818572288, 5060, 682, 2818572288, 5060, 682, 2818572288, 5060, 682, 2818572288, 5060, 682, 2818572288, 5060, 682, 2818572288, 5060, 682, 2818572288, 5060, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5064, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5076, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5080, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5092, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5096, 682, 2818572288, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5764, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5768, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5780, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5784, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5796, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720, 5800, 43690, 2852126720]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
