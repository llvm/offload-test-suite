#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  for (uint i0 = 0; (i0 < 3); i0 = (i0 + 1)) {
    uint counter1 = 0;
    while ((counter1 < 2)) {
      counter1 = (counter1 + 1);
      if ((((WaveGetLaneIndex() == 10) || (WaveGetLaneIndex() == 23)) || (WaveGetLaneIndex() == 53))) {
        result = (result + WaveActiveMax(WaveGetLaneIndex()));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = (((29 << 6) | (i0 << 4)) | (counter1 << 2));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
      switch ((WaveGetLaneIndex() % 3)) {
      case 0: {
          for (uint i2 = 0; (i2 < 3); i2 = (i2 + 1)) {
            if ((WaveGetLaneIndex() == 26)) {
              result = (result + WaveActiveMin(WaveGetLaneIndex()));
              uint temp = 0;
              InterlockedAdd(_wave_op_index[0], 3, temp);
              _participant_bit[temp] = ((((47 << 6) | (i0 << 4)) | (counter1 << 2)) | i2);
              uint4 ballot = WaveActiveBallot(1);
              _participant_bit[(temp + 1)] = ballot.x;
              _participant_bit[(temp + 2)] = ballot.y;
            }
          }
        }
      case 1: {
          if (((WaveGetLaneIndex() % 2) == 0)) {
            result = (result + WaveActiveSum(2));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((56 << 6) | (i0 << 4)) | (counter1 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
          break;
        }
      case 2: {
          if (((((WaveGetLaneIndex() == 10) || (WaveGetLaneIndex() == 22)) || (WaveGetLaneIndex() == 36)) || (WaveGetLaneIndex() == 54))) {
            if (((WaveGetLaneIndex() == 10) || (WaveGetLaneIndex() == 59))) {
              result = (result + WaveActiveMax(result));
              uint temp = 0;
              InterlockedAdd(_wave_op_index[0], 3, temp);
              _participant_bit[temp] = (((82 << 6) | (i0 << 4)) | (counter1 << 2));
              uint4 ballot = WaveActiveBallot(1);
              _participant_bit[(temp + 1)] = ballot.x;
              _participant_bit[(temp + 2)] = ballot.y;
            }
          }
          break;
        }
      }
    }
    if ((i0 == 1)) {
      continue;
    }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 432
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [1860, 8389632, 2097152, 1860, 8389632, 2097152, 1860, 8389632, 2097152, 1864, 8389632, 2097152, 1864, 8389632, 2097152, 1864, 8389632, 2097152, 1876, 8389632, 2097152, 1876, 8389632, 2097152, 1876, 8389632, 2097152, 1880, 8389632, 2097152, 1880, 8389632, 2097152, 1880, 8389632, 2097152, 1892, 8389632, 2097152, 1892, 8389632, 2097152, 1892, 8389632, 2097152, 1896, 8389632, 2097152, 1896, 8389632, 2097152, 1896, 8389632, 2097152, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3588, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3592, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3604, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3608, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3620, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420, 3624, 1363481681, 340870420]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
