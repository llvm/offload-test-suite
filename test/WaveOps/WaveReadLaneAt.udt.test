#--- source.hlsl

struct UserDefinedStruct {
  int intData;
  float floatData;
};

StructuredBuffer<UserDefinedStruct> InUDS : register(t0);
RWStructuredBuffer<int> OutInt : register(u1);
RWStructuredBuffer<float> OutFloat : register(u2);

// Note: stored in column-major format
struct MatrixStruct {
  uint4x4 matrixData;
};

StructuredBuffer<MatrixStruct> InMatrix : register(t3);
RWStructuredBuffer<uint4> OutMatrix : register(u4);

// Checks for edge-case floats
StructuredBuffer<float> InEdgeFloat : register(t5);
RWStructuredBuffer<float> OutEdgeFloat : register(u6);

[numthreads(4,1,1)]
void main(uint3 TID : SV_GroupThreadID) {
  OutInt[TID.x] = WaveReadLaneAt(InUDS[TID.x].intData, TID.x);
  OutFloat[TID.x] = WaveReadLaneAt(InUDS[TID.x].floatData, TID.x);

  OutMatrix[TID.x] = WaveReadLaneAt(InMatrix[0].matrixData[TID.x], TID.x);

  OutEdgeFloat[TID.x] = WaveReadLaneAt(InEdgeFloat[TID.x], TID.x);
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [4, 1, 1]
Buffers:
  - Name: InUDS
    Format: Hex32
    Stride: 16
    Data: [0x0, 0x0, 0x1, 0x3f800000, 0x2, 0x40000000, 0x3, 0x40400000 ]
  - Name: OutInt
    Format: Int32
    Stride: 16
    ZeroInitSize: 16
  - Name: OutFloat
    Format: Float32
    Stride: 16
    ZeroInitSize: 16
  - Name: ExpectedOutInt # The result we expect
    Format: Int32
    Stride: 16
    Data: [ 0, 1, 2, 3]
  - Name: ExpectedOutFloat # The result we expect
    Format: Float32
    Stride: 16
    Data: [ 0, 1, 2, 3]
  - Name: InMatrix
    Format: UInt32
    Stride: 16
    Data: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]
  - Name: OutMatrix
    Format: UInt32
    Stride: 16
    ZeroInitSize: 64
  - Name: ExpectedOutMatrix # The result we expect
    Format: UInt32
    Stride: 16
    Data: [ 0, 4, 8, 12, 1, 5, 9, 13, 2, 6, 10, 14, 3, 7, 11, 15 ]
  - Name: InEdgeFloat
    Format: Float32
    Stride: 16
    Data: [inf, -inf, nan, 0 ]
  - Name: OutEdgeFloat
    Format: Float32
    Stride: 16
    ZeroInitSize: 16
  - Name: ExpectedOutEdgeFloat # The result we expect
    Format: Float32
    Stride: 16
    Data: [ inf, -inf, nan, 0]
Results:
  - Result: TestInt
    Rule: BufferExact
    Actual: OutInt
    Expected: ExpectedOutInt
  - Result: TestFloat
    Rule: BufferExact
    Actual: OutFloat
    Expected: ExpectedOutFloat
  - Result: TestMatrix
    Rule: BufferExact
    Actual: OutMatrix
    Expected: ExpectedOutMatrix
  - Result: TestEdgeFloat
    Rule: BufferExact
    Actual: OutEdgeFloat
    Expected: ExpectedOutEdgeFloat
DescriptorSets:
  - Resources:
    - Name: InUDS
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: OutInt
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: OutFloat
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: InMatrix
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 3
        Space: 0
      VulkanBinding:
        Binding: 3
    - Name: OutMatrix
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 4
        Space: 0
      VulkanBinding:
        Binding: 4
    - Name: InEdgeFloat
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 5
        Space: 0
      VulkanBinding:
        Binding: 5
    - Name: OutEdgeFloat
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 6
        Space: 0
      VulkanBinding:
        Binding: 6
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
