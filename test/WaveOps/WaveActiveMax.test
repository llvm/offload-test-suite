#--- source.hlsl
RWStructuredBuffer<float> Nans : register(u0);
RWStructuredBuffer<float> Infs : register(u1);
RWStructuredBuffer<float> NegInfs : register(u2);
RWStructuredBuffer<float> Mix : register(u3);

[numthreads(4,1,1)]
void main(uint GID : SV_GroupIndex) {
  Nans[GID] = WaveActiveMax(Nans[GID]);
  Infs[GID] = WaveActiveMax(Infs[GID]);
  NegInfs[GID] = WaveActiveMax(NegInfs[GID]);
  Mix[GID] = WaveActiveMax(Mix[GID]);
}
//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: Nans
    Format: Float32
    Data: [ nan, nan, nan, nan ]
  - Name: Infs
    Format: Float32
    Data: [ inf, inf, inf, inf ]
  - Name: NegInfs
    Format: Float32
    Data: [ -inf, -inf, -inf, -inf ]
  - Name: Mix
    Format: Float32
    Data: [ inf, -inf, nan, 0 ]
DescriptorSets:
  - Resources:
    - Name: Nans
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Infs
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: NegInfs
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: Mix
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 3
        Space: 0
      VulkanBinding:
        Binding: 3
...

#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Gis -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | \
# RUN: FileCheck %s %if DirectX-WARP || Metal %{ --check-prefixes=CHECK,NO_IDENT %} %else %{ --check-prefixes=CHECK,IDENT %}

# The SPIR-V Spec for OpGroupNonUniformFMax says:
# > From the set of Value(s) provided by active invocations within a subgroup,
# > if for any two Values one of them is a NaN, the other is chosen. If all
# > Value(s) that are used by the current invocation are NaN, then the result is
# > an undefined value.

# This makes Vulkan undefined for cases where all values are nan.

# Also SPIR-V states:
# > The identity I for Operation is -INF.

# This makes it defined that any lane value of -INF is ignored.

# DirectX driver implementations seem to match SPIR-V, except WARP, which does
# not treat -INF as an identity.

# Metal also is consistent except that it does not treat -INF as an identity.

# CHECK: Name: Nans
# CHECK-NEXT: Format: Float32
# CHECK-NEXT: Data: [ nan, nan, nan, nan ]
# CHECK: Name: Infs
# CHECK-NEXT: Format: Float32
# CHECK-NEXT: Data: [ inf, inf, inf, inf ]
# CHECK: Name: NegInfs
# CHECK-NEXT: Format: Float32
# IDENT-NEXT: Data: [ 0, 0, 0, 0 ]
# NO_IDENT-NEXT: Data: [ -inf, -inf, -inf, -inf ]
# CHECK: Name: Mix
# CHECK-NEXT: Format: Float32
# CHECK-NEXT: Data: [ inf, inf, inf, inf ]
