#--- source.hlsl
RWBuffer<int> value;

[numthreads(4, 1, 1)]
void main(uint3 threadID : SV_DispatchThreadID) {
  uint sum = 0;
  switch (value[threadID.x]) {
    case 0:
      sum += WaveActiveProduct(2);
      break;
    default:
      break;
  }
  sum += WaveActiveProduct(10);
  value[threadID.x] = sum;
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: value
    Format: Int32
    Data: [ 0, 0, 1, 2]
DescriptorSets:
  - Resources:
    - Name: value
      Kind: RWBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s

# CHECK: Data: [ 10004, 10004, 10000, 10000 ]
