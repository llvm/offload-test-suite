#--- particle-life.hlsl
#define ROOT_SIGNATURE \
    "RootFlags(ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT)," \
    "CBV(b0)," \
    "SRV(t0)," \
    "SRV(t1)," \
    "UAV(u0)," \
    "UAV(u1)"


[[vk::binding(0)]]
cbuffer CONSTANTS : register(b0) {
    uint ParticleTypeMax;
    uint NumParticles;
    float2 WorldSize;
    float Friction;
    float ForceMultipler;
}

struct Rule {
    float force;
    float min_distance;
    float max_distance;
};

struct Particle {
    float2 position;
    float2 velocity;
    uint type;
};

struct Vertex {
    float2 position;
    uint color;
};

[[vk::binding(1)]]
StructuredBuffer<Rule> Rules : register(t0);
[[vk::binding(2)]]
StructuredBuffer<Particle> OldParticles : register(t1);
[[vk::binding(3)]]
RWStructuredBuffer<Particle> NewParticles : register(u0);
[[vk::binding(4)]]
RWStructuredBuffer<Vertex> Vertices : register(u1);


float3 particle_type_to_color(uint type);
uint float_to_abgr(float3 rgb);


[numthreads(32, 1, 1)]
void main(uint3 dispatch_thread_id : SV_DispatchThreadID) {
    uint particle_id = dispatch_thread_id.x;

    Particle particle = OldParticles[particle_id];

    // Accumulate forces
    float2 force = float2(0,0);
    float hit = 0;

    for (uint i = 0; i < NumParticles; ++i) {
        if (i == particle_id)
            continue;

        Particle other_particle = OldParticles[i];

        Rule rule = Rules[particle.type * ParticleTypeMax + other_particle.type];

        float2 direction = other_particle.position - particle.position;

        // wrapping
        if (direction.x > WorldSize.x * 0.5f)
            direction.x -= WorldSize.x;
        if (direction.x < WorldSize.x * -0.5f)
            direction.x += WorldSize.x;
        if (direction.y > WorldSize.y * 0.5f)
            direction.y -= WorldSize.y;
        if (direction.y < WorldSize.y * -0.5f)
            direction.y += WorldSize.y;

        // apply rule
        float distance = length(direction);
        direction = normalize(direction);

        if (distance < rule.min_distance) {
            float repulsive_amount = abs(rule.force) * (1.0f - (distance / rule.min_distance))  * -3.0f;
            force += direction * repulsive_amount;
        }

        if (distance < rule.max_distance) {
            float attract_amount = rule.force * (1.0f - (distance / rule.max_distance));
            force += direction * attract_amount;
            hit += 0.01f;
        }
    }

    float2 velocity = particle.velocity;
    velocity += force * ForceMultipler;
    velocity *= Friction;

    particle.position = particle.position + velocity;

    if (particle.position.x < 0)
        particle.position.x += WorldSize.x;

    if (particle.position.x > WorldSize.x)
        particle.position.x -= WorldSize.x;

    if (particle.position.y < 0)
        particle.position.y += WorldSize.y;

    if (particle.position.y > WorldSize.y)
        particle.position.y -= WorldSize.y;


    particle.velocity = velocity;

    Vertices[particle_id].position = particle.position;

    float3 color =  particle_type_to_color(particle.type);

    color = lerp(color, color * 0.1f, 1-saturate(hit));

    Vertices[particle_id].color = float_to_abgr(color);

    NewParticles[particle_id] = particle;
}



// from https://chilliant.com/rgb2hsv.html
float3 hue2rgb(float H) {
    float R = abs(H * 6 - 3) - 1;
    float G = 2 - abs(H * 6 - 2);
    float B = 2 - abs(H * 6 - 4);
    return saturate(float3(R,G,B));
}

float3 particle_type_to_color(uint type) {
    float hue = (float)type / float(ParticleTypeMax);
    return hue2rgb(hue);
}

uint float_to_abgr(float3 rgb) {
    rgb *= 255.0;

    uint r = rgb.x;
    uint g = rgb.y;
    uint b = rgb.z;
    uint a = 255;

    return (a << 24) | (b << 16) | (g << 8) | r;
}
//--- particle-life.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [32, 1, 1]
Buffers:
  - Name: CONSTANTS
    Format: Int32
    Data: [
        2,          # ParticleTypeMax
        32,         # NumParticles
        576,        # Width
        432,        # Height
        1063675494, # Friction (0.9f)
        1028443341, # Force Multiplier (0.05f)
    ]
  - Name: Rules
    Format: Float32
    Stride: 12
    Data: [
        # Values found via PIX capture.
        0.668609, 36.0982, 126.076,
        0.777813, 47.3667, 153.301,
        0.580675, 36.4385, 223.18,
        -0.4252,  49.3721, 268.325,
    ]
  - Name: OldParticles
    Format: Float32
    Stride: 20
    Data: [
        # Values found via PIX capture.
        # Note: 1.40129846E-45f == 0x00000001
          0.696739, 142.038651, 0, 0, 0,
        291.907013, 399.526642, 0, 0, 1.40129846E-45,
        175.601410, 275.703766, 0, 0, 1.40129846E-45,
        568.259949,  49.678871, 0, 0, 0,
        403.012360, 364.514069, 0, 0, 0,
        543.165344, 129.993225, 0, 0, 1.40129846E-45,
         72.757988, 416.646820, 0, 0, 0,
        131.410492, 240.978271, 0, 0, 1.40129846E-45,
         97.691116, 348.687927, 0, 0, 1.40129846E-45,
        400.843658,  79.489296, 0, 0, 1.40129846E-45,
         17.295982,  21.020313, 0, 0, 1.40129846E-45,
         43.010857, 110.249710, 0, 0, 1.40129846E-45,
        120.579689, 289.477570, 0, 0, 0,
        525.788818,  62.932449, 0, 0, 0,
        174.842529, 259.451721, 0, 0, 1.40129846E-45,
        149.797974, 192.973465, 0, 0, 0,
        384.795868,   0.964359, 0, 0, 0,
        364.804382, 424.608429, 0, 0, 0,
        197.151855, 327.236420, 0, 0, 0,
        248.257019, 395.461426, 0, 0, 1.40129846E-45,
        137.357452, 154.307480, 0, 0, 0,
        249.463043, 268.753845, 0, 0, 1.40129846E-45,
        208.790161, 427.462463, 0, 0, 0,
        326.137054,  65.707703, 0, 0, 1.40129846E-45,
        104.155403, 329.894623, 0, 0, 1.40129846E-45,
        551.543274,  30.785648, 0, 0, 0,
        467.292267, 431.669495, 0, 0, 0,
        257.305725,  28.127918, 0, 0, 0,
         52.601646,  55.992886, 0, 0, 0,
        202.340485, 285.560913, 0, 0, 1.40129846E-45,
        320.065735, 225.830231, 0, 0, 0,
        538.903625, 321.111237, 0, 0, 0,
    ]
  - Name: NewParticles
    Format: Float32
    Stride: 20
    ZeroInitSize: 640
  - Name: ExpectedParticles
    Format: Float32
    Stride: 20
    Data: [
        0.719183, 142.013, 0.0224437, -0.0260402, 0,
        291.965, 399.553, 0.0578723, 0.0264942, 1.4013e-45,
        175.561, 275.738, -0.0406105, 0.0342286, 1.4013e-45,
        568.239, 49.7021, -0.0212302, 0.023205, 0,
        403.003, 364.533, -0.00957608, 0.0192838, 0,
        543.176, 129.952, 0.0105071, -0.0414064, 1.4013e-45,
        72.7691, 416.616, 0.0111061, -0.0304487, 0,
        131.376, 240.927, -0.034767, -0.0512624, 1.4013e-45,
        97.6543, 348.763, -0.0368595, 0.0750704, 1.4013e-45,
        400.861, 79.4692, 0.0170616, -0.0201277, 1.4013e-45,
        17.3085, 21.0374, 0.0125516, 0.0170663, 1.4013e-45,
        43.0106, 110.25, -0.000270761, 4.26963e-05, 1.4013e-45,
        120.643, 289.471, 0.0629655, -0.00696298, 0,
        525.819, 62.9302, 0.0298929, -0.00222033, 0,
        174.816, 259.361, -0.0265245, -0.0912027, 1.4013e-45,
        149.799, 193.026, 0.00128695, 0.0527595, 0,
        384.789, 0.99188, -0.00676379, 0.0275205, 0,
        364.793, 424.59, -0.0112163, -0.0181641, 0,
        197.127, 327.186, -0.025348, -0.0508726, 0,
        248.25, 395.497, -0.00664204, 0.0360285, 1.4013e-45,
        137.358, 154.353, 0.000708882, 0.0458239, 0,
        249.506, 268.737, 0.043196, -0.0167597, 1.4013e-45,
        208.817, 427.431, 0.0266717, -0.0318986, 0,
        326.12, 65.6863, -0.0165907, -0.0213587, 1.4013e-45,
        104.15, 329.865, -0.00585696, -0.0293124, 1.4013e-45,
        551.528, 30.8113, -0.015763, 0.0257023, 0,
        467.281, 431.663, -0.0110225, -0.00609188, 0,
        257.321, 28.1362, 0.0151884, 0.008258, 0,
        52.5778, 56.0035, -0.0238628, 0.0106606, 0,
        202.387, 285.595, 0.0461606, 0.0336835, 1.4013e-45,
        320.047, 225.841, -0.0191667, 0.0108352, 0,
        538.904, 321.111, 0, 0, 0
    ]
  - Name: Vertices
    Format: Float32
    Stride: 12
    ZeroInitSize: 384
  - Name: ExpectedVertices
    Format: Float32
    Stride: 20
    Data: [
        0.719183, 142.013, -1.70142e+38,
        291.965, 399.553, -2.52875e+38,
        175.561, 275.738, -2.58213e+38,
        568.239, 49.7021, -1.70142e+38,
        403.003, 364.533, -1.70142e+38,
        543.176, 129.952, -2.24852e+38,
        72.7691, 416.616, -1.70142e+38,
        131.376, 240.927, -2.64885e+38,
        97.6543, 348.763, -2.48872e+38,
        400.861, 79.4692, -2.31525e+38,
        17.3085, 21.0374, -2.22184e+38,
        43.0106, 110.25, -2.43534e+38,
        120.643, 289.471, -1.70142e+38,
        525.819, 62.9302, -1.70142e+38,
        174.816, 259.361, -2.58213e+38,
        149.799, 193.026, -1.70142e+38,
        384.789, 0.99188, -1.70142e+38,
        364.793, 424.59, -1.70142e+38,
        197.127, 327.186, -1.70142e+38,
        248.25, 395.497, -2.52875e+38,
        137.358, 154.353, -1.70142e+38,
        249.506, 268.737, -2.62216e+38,
        208.817, 427.431, -1.70142e+38,
        326.12, 65.6863, -2.43534e+38,
        104.15, 329.865, -2.52875e+38,
        551.528, 30.8113, -1.70142e+38,
        467.281, 431.663, -1.70142e+38,
        257.321, 28.1362, -1.70142e+38,
        52.5778, 56.0035, -1.70142e+38,
        202.387, 285.595, -2.62216e+38,
        320.047, 225.841, -1.70142e+38,
        538.904, 321.111, -1.70142e+38
    ]
Results:
  - Result: CheckNewParticles
    Rule: BufferFloatULP
    ULPT: 1000
    Actual: NewParticles
    Expected: ExpectedParticles
  - Result: CheckVertices
    Rule: BufferFloatULP
    ULPT: 1000
    Actual: Vertices
    Expected: ExpectedVertices
DescriptorSets:
  - Resources:
    - Name: CONSTANTS
      Kind: ConstantBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Rules
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: OldParticles
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: NewParticles
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 3
    - Name: Vertices
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 4
...
#--- end

# clang-dxc doesn't support the -fvk-use-scalar-layout flag yet
# UNSUPPORTED: Clang-Vulkan

# CBuffer bindings seem to be broken under metal
# https://github.com/llvm-beanz/offload-test-suite/issues/55
# UNSUPPORTED: Metal

# RUN: split-file %s %t
# RUN: %if !Vulkan %{ %dxc_target -T cs_6_0 -Fo %t.o %t/particle-life.hlsl %}
# RUN: %if Vulkan %{ %dxc_target -T cs_6_0 -fspv-target-env=vulkan1.3 -fvk-use-scalar-layout -Fo %t.o %t/particle-life.hlsl %}
# TODO: Specify -rootsig-define ROOT_SIGNATURE
# RUN: %offloader %t/particle-life.yaml %t.o
