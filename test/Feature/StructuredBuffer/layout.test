#--- source.hlsl
struct A {
  float a;
  float b;
  float c;
};

struct B {
  float2 ab;
  float c;
};

struct C {
  float abc[3];
};

StructuredBuffer<float4> In : register(t0);
RWStructuredBuffer<A> BufA : register(u1);
RWStructuredBuffer<B> BufB : register(u2);
RWStructuredBuffer<C> BufC : register(u3);

[numthreads(1,1,4)]
void main(uint GI : SV_GroupIndex) {
  BufA[GI].a = In[GI].x;
  BufA[GI].b = In[GI].y;
  BufA[GI].c = In[GI].z;
  BufB[GI].ab.x = In[GI].x;
  BufB[GI].ab.y = In[GI].y;
  BufB[GI].c = In[GI].z;
  BufC[GI].abc[0] = In[GI].x;
  BufC[GI].abc[1] = In[GI].y;
  BufC[GI].abc[2] = In[GI].z;
}
//--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In
    Format: Float32
    Stride: 32
    Data: [ 1, 2, 3, 0, 4, 5, 6, 0, 7, 8, 9, 0, 10, 11, 12, 0 ]
  - Name: BufA
    Format: Float32
    Stride: 12
    ZeroInitSize: 48
  - Name: BufB
    Format: Float32
    Stride: 12
    ZeroInitSize: 48
  - Name: BufC
    Format: Float32
    Stride: 12
    ZeroInitSize: 48
DescriptorSets:
  - Resources:
    - Name: In
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: BufA
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: BufB
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: BufC
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 3
        Space: 0
      VulkanBinding:
        Binding: 3
...
#--- end

# clang-dxc doesn't support the -fvk-use-scalar-layout flag yet
# UNSUPPORTED: Clang-Vulkan

# RUN: split-file %s %t
# RUN: %if !Vulkan %{ %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl %}
# RUN: %if Vulkan %{ %dxc_target -T cs_6_0 -fspv-target-env=vulkan1.3 -fvk-use-scalar-layout -Fo %t.o %t/source.hlsl %}
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s

# CHECK: Name: In
# CHECK: Data: [

# CHECK: Name: BufA
# CHECK: Data: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]

# CHECK: Name: BufB
# CHECK: Data: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]

# CHECK: Name: BufC
# CHECK: Data: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
