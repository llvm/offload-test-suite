#--- source.hlsl
RWStructuredBuffer<uint> Out : register(u0);

[numthreads(1,1,1)]
void main(uint GI : SV_GroupIndex) {
  Out.DecrementCounter();
  Out.DecrementCounter();
  Out.DecrementCounter();
  Out[GI] = Out.DecrementCounter();
}

//--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: Out
    Format: Hex32
    Stride: 4
    ZeroInitSize: 4
DescriptorSets:
  - Resources:
    - Name: Out
      Kind: RWStructuredBuffer
      HasCounter: true
      DirectXBinding:
        Register: 0
        Space: 0
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s

# CHECK: Creating UAV: { Size = 4100, Register = u0, Space = 0, HasCounter = 1 }
# CHECK: UAV: HeapIdx = 0 EltSize = 4 NumElts = 1 HasCounter = 1

# CHECK: Name: Out
# CHECK: Counter: 4294967292
# CHECK: Data: [
# CHECK: 0xFFFFFFFC
# CHECK: ]
