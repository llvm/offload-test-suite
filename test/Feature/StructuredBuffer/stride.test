#--- source.hlsl
struct S {
  float4 i;
};

StructuredBuffer<float4> In : register(t0);
RWStructuredBuffer<S> Out : register(u1);

[numthreads(2,1,1)]
void main(uint GI : SV_GroupIndex) {
  Out[GI].i = In[GI];
}
//--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In
    Format: Float32
    Stride: 32
    Data: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  - Name: Out
    Format: Float32
    Stride: 4
    ZeroInitSize: 32
DescriptorSets:
  - Resources:
    - Name: In
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Out
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s

# CHECK: Name: In
# CHECK: Data: [

# CHECK: Name: Out
# CHECK: Data: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
