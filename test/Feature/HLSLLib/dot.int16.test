#--- source.hlsl
StructuredBuffer<int16_t4> X0 : register(t0);
StructuredBuffer<int16_t4> Y0 : register(t1);
StructuredBuffer<uint16_t4> X1 : register(t2);
StructuredBuffer<uint16_t4> Y1 : register(t3);

RWStructuredBuffer<int16_t> Out0 : register(u4);
RWStructuredBuffer<uint16_t> Out1 : register(u5);


[numthreads(1,1,1)]
void main() {
  // int16_t
  Out0[0] = dot(X0[0].x, Y0[0].x);
  Out0[1] = dot(int16_t(100), int16_t(25));

  Out0[2] = dot(X0[0].xy, Y0[0].xy);
  Out0[3] = dot(int16_t2(100, -52), int16_t2(25, 43));

  Out0[4] = dot(X0[0].xyz, Y0[0].xyz);
  Out0[5] = dot(int16_t3(100, -52, -210), int16_t3(25, 43, -16));

  Out0[6] = dot(X0[0], Y0[0]);
  Out0[7] = dot(int16_t4(100, -52, -210, 75), int16_t4(25, 43, -16, -62));

  // uint16_t
  Out1[0] = dot(X1[0].x, Y1[0].x);
  Out1[1] = dot(uint16_t(100), uint16_t(25));

  Out1[2] = dot(X1[0].xy, Y1[0].xy);
  Out1[3] = dot(uint16_t2(100, 52), uint16_t2(25, 43));

  Out1[4] = dot(X1[0].xyz, Y1[0].xyz);
  Out1[5] = dot(uint16_t3(100, 52, 210), uint16_t3(25, 43, 16));

  Out1[6] = dot(X1[0], Y1[0]);
  Out1[7] = dot(uint16_t4(100, 52, 210, 75), uint16_t4(25, 43, 16, 62));
}
//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: X0
    Format: Int16
    Stride: 8
    Data: [ 100, -52, -210, 75 ]
  - Name: Y0
    Format: Int16
    Stride: 8
    Data: [ 25, 43, -16, -62 ]
  - Name: X1
    Format: UInt16
    Stride: 8
    Data: [ 100, 52, 210, 75 ]
  - Name: Y1
    Format: UInt16
    Stride: 8
    Data: [ 25, 43, 16, 62 ]
  - Name: Out0
    Format: Int16
    Stride: 2
    ZeroInitSize: 16
  - Name: ExpectedOut0
    Format: Int16
    Stride: 2
    Data: [ 2500, 2500, 264, 264, 3624, 3624, -1026, -1026 ]
  - Name: Out1
    Format: UInt16
    Stride: 2
    ZeroInitSize: 16
  - Name: ExpectedOut1
    Format: UInt16
    Stride: 2
    Data: [ 2500, 2500, 4736, 4736, 8096, 8096, 12746, 12746 ]
Results:
  - Result: Test0
    Rule: BufferExact
    Actual: Out0
    Expected: ExpectedOut0
  - Result: Test1
    Rule: BufferExact
    Actual: Out1
    Expected: ExpectedOut1
DescriptorSets:
  - Resources:
    - Name: X0
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Y0
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: X1
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: Y1
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 3
        Space: 0
      VulkanBinding:
        Binding: 3
    - Name: Out0
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 4
        Space: 0
      VulkanBinding:
        Binding: 4
    - Name: Out1
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 5
        Space: 0
      VulkanBinding:
        Binding: 5
#--- end

# REQUIRES: Int16
# RUN: split-file %s %t
# RUN: %dxc_target -enable-16bit-types -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
