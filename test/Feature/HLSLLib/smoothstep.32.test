#--- source.hlsl

StructuredBuffer<float2> Min2D : register(t0);
StructuredBuffer<float4> Min3D : register(t1);
StructuredBuffer<float4> Min4D : register(t2);
StructuredBuffer<float2> Max2D : register(t3);
StructuredBuffer<float4> Max3D : register(t4);
StructuredBuffer<float4> Max4D : register(t5);
StructuredBuffer<float2> X2D : register(t6);
StructuredBuffer<float4> X3D : register(t7);
StructuredBuffer<float4> X4D : register(t8);
RWStructuredBuffer<float2> Result2D : register(u9);
RWStructuredBuffer<float4> Result3D : register(u10);
RWStructuredBuffer<float4> Result4D : register(u11);

[numthreads(1,1,1)]
void main() {
  // 2D case
  float2 result2D = smoothstep(Min2D[0], Max2D[0], X2D[0]);
  Result2D[0] = result2D;
  float2 result2D_constant = smoothstep(float2(0.75, -0.5), float2(10.5, 24.5), float2(1.0, 23.0));
  Result2D[1] = result2D_constant;

  // we should also test cases where x is below and above the min and max bounds
  // below case:
  float2 result2D_below_min = smoothstep(Min2D[1], Max2D[1], X2D[1]);
  Result2D[2] = result2D_below_min;
  // above case:
  float2 result2D_above_max = smoothstep(Min2D[2], Max2D[2], X2D[2]);
  Result2D[3] = result2D_above_max;

  // 3D case, using float4 for alignment
  float4 result3D = float4(smoothstep(Min3D[0], Max3D[0], X3D[0]));
  Result3D[0] = result3D;
  float4 result3D_constant = float4(smoothstep(float3(0.75, -0.5, 1.0), float3(10.5, 24.5, 3.0), float3(1.0, 23.0, 3.0)), 0.0);
  Result3D[1] = result3D_constant;

  // 4D case
  float4 result4D = smoothstep(Min4D[0], Max4D[0], X4D[0]);
  Result4D[0] = result4D;
  float4 result4D_constant = smoothstep(float4(0.75, -0.5, 1.0, -2.0), float4(10.5, 24.5, 3.0, -0.125), float4(1.0, 23.0, 2.5, -0.25));
  Result4D[1] = result4D_constant;
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  
  - Name: Min2D
    Format: Float32
    Stride: 8
    Data: [ 0.75, -0.5, 0.75, -0.5, 0.75, -0.5, 0.0, 0.0 ]
  - Name: Min3D
    Format: Float32
    Stride: 16
    Data: [ 0.75, -0.5, 1.0, 0.0 ]
  - Name: Min4D
    Format: Float32
    Stride: 16
    Data: [ 0.75, -0.5, 1.0, -2.0 ]
  - Name: Max2D
    Format: Float32
    Stride: 8
    Data: [ 10.5, 24.5, 10.5, 24.5, 10.5, 24.5, 0x0, 0x0 ]
  - Name: Max3D
    Format: Float32
    Stride: 16
    Data: [ 10.5, 24.5, 3.0, 0.0 ]
  - Name: Max4D
    Format: Float32
    Stride: 16
    Data: [ 10.5, 24.5, 3.0, -0.125 ]
  - Name: X2D
    Format: Float32
    Stride: 8
    Data: [ 1.0, 23.0, -5.5, -5.5, 32.125, 32.125, 0.0, 0.0 ]
  - Name: X3D
    Format: Float32
    Stride: 16
    Data: [ 1.0, 23.0, 3.0, 0.0 ]
  - Name: X4D
    Format: Float32
    Stride: 16
    Data: [ 1.0, 23.0, 2.5, -0.25 ]
  - Name: Result2D
    Format: Float32
    Stride: 8
    ZeroInitSize: 32
  - Name: ExpectedResult2D
    Format: Float32
    Stride: 8
    Data: [ 0x1.fc35fc0000000p-10, 0x1.fab10c0000000p-1, 0x1.fc35fc0000000p-10, 0x1.fab10c0000000p-1, 0x0.0000000000000p+0, 0x0.0000000000000p+0, 0x1.0000000000000p+0, 0x1.0000000000000p+0 ]
  - Name: Result3D
    Format: Float32
    Stride: 16
    ZeroInitSize: 32
  - Name: ExpectedResult3D
    Format: Float32
    Stride: 16
    Data: [ 0x1.fc35fc0000000p-10, 0x1.fab10c0000000p-1, 0x1.0000000000000p+0, 0x0.0000000000000p+0, 0x1.fc35fc0000000p-10, 0x1.fab10c0000000p-1, 0x1.0000000000000p+0, 0x0.0000000000000p+0 ]
  - Name: Result4D
    Format: Float32
    Stride: 16
    ZeroInitSize: 32
  - Name: ExpectedResult4D
    Format: Float32
    Stride: 16
    Data: [ 0x1.fc35fc0000000p-10, 0x1.fab10c0000000p-1, 0x1.b000000000000p-1, 0x1.f97a0a0000000p-1, 0x1.fc35fc0000000p-10, 0x1.fab10c0000000p-1, 0x1.b000000000000p-1, 0x1.f97a0a0000000p-1 ]
Results:  
  - Result: CheckResult2D
    Rule: BufferFloatULP
    ULPT: 2
    Actual: Result2D
    Expected: ExpectedResult2D
  - Result: CheckResult3D
    Rule: BufferFloatULP
    ULPT: 2
    Actual: Result3D
    Expected: ExpectedResult3D
  - Result: CheckResult4D
    Rule: BufferFloatULP
    ULPT: 2
    Actual: Result4D
    Expected: ExpectedResult4D

DescriptorSets:
  - Resources:
    - Name: Min2D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Min3D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: Min4D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: Max2D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 3
        Space: 0
      VulkanBinding:
        Binding: 3
    - Name: Max3D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 4
        Space: 0
      VulkanBinding:
        Binding: 4
    - Name: Max4D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 5
        Space: 0
      VulkanBinding:
        Binding: 5
    - Name: X2D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 6
        Space: 0
      VulkanBinding:
        Binding: 6
    - Name: X3D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 7
        Space: 0
      VulkanBinding:
        Binding: 7
    - Name: X4D
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 8
        Space: 0
      VulkanBinding:
        Binding: 8
    - Name: Result2D
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 9
        Space: 0
      VulkanBinding:
        Binding: 9
    - Name: Result3D
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 10
        Space: 0
      VulkanBinding:
        Binding: 10
    - Name: Result4D
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 11
        Space: 0
      VulkanBinding:
        Binding: 11     
...
#--- end


# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
