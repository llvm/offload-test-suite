#--- source.hlsl
StructuredBuffer<double> X : register(t0);
StructuredBuffer<double> Y : register(t1);

RWStructuredBuffer<double> Out : register(u2);


[numthreads(1,1,1)]
void main() {
  Out[0] = dot(X[0], Y[0]);
  Out[1] = dot(double(1.125), double(7.29));

  Out[2] = dot(X[1], Y[1]);
  Out[3] = dot(double(-2.5), double(3.14));

  Out[4] = dot(X[2], Y[2]);
  Out[5] = dot(double(-4.75), double(-1.1));
  
  Out[6] = dot(X[3], Y[3]);
  Out[7] = dot(double(6.625), double(-3.5));
}
//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: X
    Format: Float64
    Stride: 8
    Data: [ 1.125, -2.5, -4.75, 6.625 ]
  - Name: Y
    Format: Float64
    Stride: 8
    Data: [ 7.29, 3.14, -1.1, -3.5 ]
  - Name: Out
    Format: Float64
    Stride: 8
    ZeroInitSize: 64
  - Name: ExpectedOut
    Format: Float64
    Stride: 8
    Data: [ 8.20125, 8.20125, -7.85, -7.85, 5.225, 5.225, -23.1875, -23.1875 ]
Results:
  - Result: Test0
    Rule: BufferFloatEpsilon
    Epsilon: 0.008
    Actual: Out
    Expected: ExpectedOut
DescriptorSets:
  - Resources:
    - Name: X
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Y
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: Out
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
#--- end

# https://github.com/llvm/llvm-project/issues/149561
# XFAIL: Clang-Vulkan && !VK_KHR_shader_float_controls2

# REQUIRES: Double
# RUN: split-file %s %t
# RUN: %dxc_target  -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
