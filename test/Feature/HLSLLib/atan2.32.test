#--- source.hlsl
StructuredBuffer<float4> In0 : register(t0);
StructuredBuffer<float4> In1 : register(t1);

RWStructuredBuffer<float4> Out0 : register(u2);

[numthreads(1,1,1)]
void main() {
  Out0[0] = atan2(In0[0], In1[0]);
  Out0[1] = float4(atan2(In0[1].xyz, In1[1].xyz), atan2(In0[1].w, In1[1].w));
  Out0[2] = float4(atan2(In0[2].xy, In1[2].xy), atan2(In0[2].zw, In1[2].zw));
  Out0[3] = atan2(float4(10.0, -5.0, 20.25, 1), float4(2, -1, 0.25, 2));
}
//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In0
    Format: Float32
    Stride: 16
    Data: [10.0, -5.0, 20.25, 1, 20.2, 30.3, 40.4, 50.5, -0.25, -20, -30, -400]
  - Name: In1
    Format: Float32
    Stride: 16
    Data: [2, -1, 0.25, 2, 5.5, 6.6, 7.7, 8.8, -100, -20, -30, 0.25]
  - Name: Out0
    Format: Float32
    Stride: 16
    ZeroInitSize: 64
  - Name: ExpectedOut0
    Format: Float32
    Stride: 16
    Data: [ 1.3734, -1.76819, 1.55845, 0.463648, 1.30496, 1.35632, 1.38246, 1.39827, -3.13909, -2.35619, -2.35619, -1.57017, 1.3734, -1.76819, 1.55845, 0.463648 ]
Results:
  - Result: Test0
    Rule: BufferFloatEpsilon
    Epsilon: 0.0008
    Actual: Out0
    Expected: ExpectedOut0
DescriptorSets:
  - Resources:
    - Name: In0
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: In1
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: Out0
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
#--- end


# RUN: split-file %s %t
# RUN: %dxc_target -HV 202x -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
