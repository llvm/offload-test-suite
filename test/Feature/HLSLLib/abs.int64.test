#--- source.hlsl

StructuredBuffer<int64_t4> In1 : register(t0);
StructuredBuffer<uint64_t4> In2 : register(t1);
RWStructuredBuffer<int64_t4> Out1 : register(u2);
RWStructuredBuffer<uint64_t4> Out2 : register(u3);

[numthreads(1,1,1)]
void main() {
  // int64_t
  Out1[0] = abs(In1[0]);
  int64_t4 Tmp = {abs(In1[0].xyz), abs(In1[0].w)};
  Out1[1] = Tmp;
  Out1[2].xy = abs(In1[0].xy);

  // uint64_t
  Out2[0] = abs(In2[0]);
  uint64_t4 Tmp2 = {abs(In2[0].xyz), abs(In2[0].w)};
  Out2[1] = Tmp2;
  Out2[2].xy = abs(In2[0].xy);
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In1
    Format: Int64
    Stride: 32
    Data: [-1, 0, -9223372036854775808, 9223372036854775807]
  - Name: In2
    Format: UInt64
    Stride: 32
    Data: [1, 0xFFFFFFFFFFFFFFFF, 0, 10]
  - Name: Out1
    Format: Int64
    Stride: 32
    ZeroInitSize: 96
  - Name: ExpectedOut1 # The result we expect
    Format: Int64
    Stride: 32
    Data: [1, 0, -9223372036854775808, 9223372036854775807, 1, 0, -9223372036854775808, 9223372036854775807, 1, 0, 0, 0] # Last two are filler
  - Name: Out2
    Format: UInt64
    Stride: 32
    ZeroInitSize: 96 
  - Name: ExpectedOut2 # The result we expect
    Format: UInt64
    Stride: 32
    Data: [1, 0xFFFFFFFFFFFFFFFF, 0, 10, 1, 0xFFFFFFFFFFFFFFFF, 0, 10, 1, 0xFFFFFFFFFFFFFFFF, 0, 0] # Last two are filler
Results:
  - Result: Test1
    Rule: BufferExact
    Actual: Out1
    Expected: ExpectedOut1
  - Result: Test2
    Rule: BufferExact
    Actual: Out2
    Expected: ExpectedOut2
DescriptorSets:
  - Resources:
    - Name: In1
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: In2
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
    - Name: Out1
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 2
        Space: 0
      VulkanBinding:
        Binding: 2
    - Name: Out2
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 3
        Space: 0
      VulkanBinding:
        Binding: 3
...
#--- end

# https://github.com/microsoft/DirectXShaderCompiler/issues/7512
# XFAIL: DXC-Vulkan

# REQUIRES: Int64
# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
