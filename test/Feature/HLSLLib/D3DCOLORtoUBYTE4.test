#--- source.hlsl
StructuredBuffer<float4> In0 : register(t0);
RWStructuredBuffer<uint4> Out0 : register(u1);

[numthreads(1,1,1)]
void main() {
  Out0[0] = D3DCOLORtoUBYTE4(In0[0]);
  Out0[1] = D3DCOLORtoUBYTE4(float4(0, 11.11, -50.5, 100));
}
//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In0
    Format: Float32
    Stride: 16
    Data: [0, 11.11, -50.5, 100]
  - Name: Out0
    Format: UInt32
    Stride: 16
    ZeroInitSize: 32
  - Name: ExpectedOut0
    Format: UInt32
    Stride: 16
    Data: [ 4294954419, 2833, 0, 25500, 4294954419, 2833, 0, 25500 ]
Results:
  - Result: Test0
    Rule: BufferExact
    Actual: Out0
    Expected: ExpectedOut0
DescriptorSets:
  - Resources:
    - Name: In0
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Out0
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
#--- end


# https://github.com/llvm/llvm-project/issues/149561
# XFAIL: Clang-Vulkan && !VK_KHR_shader_float_controls2

# RUN: split-file %s %t
# RUN: %dxc_target -HV 202x -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
