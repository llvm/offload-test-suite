#--- source.hlsl

cbuffer RootConstants : register(b0, space2) {
  float4 C;
};

struct Input {
  float4 A;
  float4 B;
};

struct Output {
  float4 A;
};

StructuredBuffer<Input> In : register(t0);
RWStructuredBuffer<Output> Out : register(u1);

// Root signature to demonstrate:
//  - All keywords and enums are case in-sensitive
//  - Registers are case sensitive
//  - Mandatory and optional arguments can be specified in any order

#define RootSig                                                                \
  "rootflags(allow_input_assembler_input_layout),"                             \
  "rootconstants(space = 2, b0, num32bitconstants = 4), "                      \
  "DESCRIPTORTABLE( "                                                          \
  "  SRV(FLAGS = DATA_STATIC, t0, SPACE = 0), "                                \
  "  VisibilitY = ShadeR_VisibilitY_AlL, "                                     \
  "  uav(u1, NumDescriptors = UNBOUNDED) "                                     \
  ")"

[RootSignature(RootSig)]
[numthreads(1,1,1)]
void main(uint GI : SV_GroupIndex) {
  Out[GI].A = In[GI].A * In[GI].B * C;
}

//--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
RuntimeSettings:
  DirectX:
    RootParameters:
      - Kind: Constant
        Name: Root
      - Kind: DescriptorTable
Buffers:
  - Name: Root
    Format: Float32
    Data: [ 2, 4, 6, 8 ]
  - Name: In
    Format: Float32
    Stride: 32
    Data: [ 2, 4, 6, 8, 10, 12, 14, 16]
  - Name: Out
    Format: Float32
    Channels: 4
    ZeroInitSize: 16
DescriptorSets:
  - Resources:
    - Name: In
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
    - Name: Out
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s
# RUN: obj2yaml %t.o | FileCheck %s --check-prefix=OBJ

# CHECK-LABEL: Name: Out
# CHECK: Data: [ 40, 192, 504, 1024 ]

# OBJ:      - Name:            RTS0
# OBJ-NEXT:   Size:            116
# OBJ-NEXT:   RootSignature:
# OBJ-NEXT:     Version:         2
# OBJ-NEXT:     NumRootParameters: 2
# OBJ-NEXT:     RootParametersOffset: 24
# OBJ-NEXT:     NumStaticSamplers: 0
# OBJ-NEXT:     StaticSamplersOffset: 116
# OBJ-NEXT:     Parameters:
# OBJ-NEXT:       - ParameterType:   1
# OBJ-NEXT:         ShaderVisibility: 0
# OBJ-NEXT:         Constants:
# OBJ-NEXT:           Num32BitValues:  4
# OBJ-NEXT:           RegisterSpace:   2
# OBJ-NEXT:           ShaderRegister:  0
# OBJ-NEXT:       - ParameterType:   0
# OBJ-NEXT:         ShaderVisibility: 0
# OBJ-NEXT:         Table:
# OBJ-NEXT:           NumRanges:       2
# OBJ-NEXT:           RangesOffset:    68
# OBJ-NEXT:           Ranges:
# OBJ-NEXT:             - RangeType:       0
# OBJ-NEXT:               NumDescriptors:  1
# OBJ-NEXT:               BaseShaderRegister: 0
# OBJ-NEXT:               RegisterSpace:   0
# OBJ-NEXT:               OffsetInDescriptorsFromTableStart: 4294967295
# OBJ-NEXT:               DATA_STATIC:     true
# OBJ-NEXT:             - RangeType:       1
# OBJ-NEXT:               NumDescriptors:  -1
# OBJ-NEXT:               BaseShaderRegister: 1
# OBJ-NEXT:               RegisterSpace:   0
# OBJ-NEXT:               OffsetInDescriptorsFromTableStart: 4294967295
# OBJ:          AllowInputAssemblerInputLayout: true
