#--- source.hlsl
RWBuffer<int> In : register(u0);
RWBuffer<int> Out : register(u1);

[numthreads(8,1,1)]
void main(uint3 TID : SV_GroupThreadID) {
    [branch]
    if (TID.x) {
        int X = In[TID.x];
        Out[TID.x] = -X;
    }
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In
    Format: Int32
    Data: [ 1, 4, 9, 16, 25, 36, 49, 64]
  - Name: Out
    Format: Int32
    ZeroInitSize: 32
DescriptorSets:
  - Resources:
    - Name: In
      Kind: RWBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Out
      Kind: RWBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s

# CHECK: Name: In
# CHECK: Format: Int32
# CHECK: Data: [ 1, 4, 9, 16, 25, 36, 49, 64 ]
# CHECK: Name: Out
# CHECK: Format: Int32
# CHECK: Data: [ 0, -4, -9, -16, -25, -36, -49, -64 ]
