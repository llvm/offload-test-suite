#--- source.hlsl
RWBuffer<int> In : register(u0);
RWBuffer<int> Out : register(u1);

[numthreads(8,1,1)]
void CSMain(uint3 TID : SV_GroupThreadID) {
  Out[TID.x] = In[TID.x];
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: CSMain
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In
    Format: Int32
    Data: [ 1, 2, 3, 4, 5, 6, 7, 8]
  - Name: Out
    Format: Int32
    Data: [ 9, 10, 11, 12, 13, 14, 15, 16]
DescriptorSets:
  - Resources:
    - Name: In
      Kind: RWBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Out
      Kind: RWBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -E CSMain -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o | FileCheck %s

# CHECK: Name: In
# CHECK: Format: Int32
# CHECK: Data: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
# CHECK: Name: Out
# CHECK: Format: Int32
# CHECK: Data: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
