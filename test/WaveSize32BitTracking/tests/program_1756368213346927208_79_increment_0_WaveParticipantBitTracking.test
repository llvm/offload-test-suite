#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  switch ((WaveGetLaneIndex() % 2)) {
  case 0: {
      if ((WaveGetLaneIndex() < 8)) {
        result = (result + WaveActiveSum(1));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = (9 << 6);
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
      break;
    }
  case 1: {
      for (uint i0 = 0; (i0 < 3); i0 = (i0 + 1)) {
        if ((WaveGetLaneIndex() == 15)) {
          result = (result + WaveActiveSum(result));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = ((24 << 6) | (i0 << 4));
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
        uint counter1 = 0;
        while ((counter1 < 3)) {
          counter1 = (counter1 + 1);
          if ((WaveGetLaneIndex() == 28)) {
            result = (result + WaveActiveMax(result));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((38 << 6) | (i0 << 4)) | (counter1 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
          if (((WaveGetLaneIndex() < 6) || (WaveGetLaneIndex() >= 27))) {
            if (((WaveGetLaneIndex() < 10) || (WaveGetLaneIndex() >= 25))) {
              result = (result + WaveActiveSum((WaveGetLaneIndex() + 4)));
              uint temp = 0;
              InterlockedAdd(_wave_op_index[0], 3, temp);
              _participant_bit[temp] = (((58 << 6) | (i0 << 4)) | (counter1 << 2));
              uint4 ballot = WaveActiveBallot(1);
              _participant_bit[(temp + 1)] = ballot.x;
              _participant_bit[(temp + 2)] = ballot.y;
            }
          } else {
          if (((WaveGetLaneIndex() & 1) == 1)) {
            result = (result + WaveActiveMin(7));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((67 << 6) | (i0 << 4)) | (counter1 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
        }
      }
      if ((WaveGetLaneIndex() == 10)) {
        result = (result + WaveActiveMax(result));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = ((74 << 6) | (i0 << 4));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
    }
    break;
  }
  default: {
    result = (result + WaveActiveSum(99));
    uint temp = 0;
    InterlockedAdd(_wave_op_index[0], 3, temp);
    _participant_bit[temp] = (78 << 6);
    uint4 ballot = WaveActiveBallot(1);
    _participant_bit[(temp + 1)] = ballot.x;
    _participant_bit[(temp + 2)] = ballot.y;
    break;
  }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 906
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [576, 85, 0, 576, 85, 0, 576, 85, 0, 576, 85, 0, 1536, 32768, 0, 1552, 32768, 0, 1568, 32768, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 576, 85, 0, 576, 85, 0, 576, 85, 0, 576, 85, 0, 1536, 32768, 0, 1552, 32768, 0, 1568, 32768, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3716, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3720, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3724, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3732, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3736, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3740, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3748, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3752, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 3756, 2818572330, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4292, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4296, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4300, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4308, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4312, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4316, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4324, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4328, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0, 4332, 44739200, 0]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
