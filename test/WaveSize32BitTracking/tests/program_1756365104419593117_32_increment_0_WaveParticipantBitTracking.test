#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  for (uint i0 = 0; (i0 < 2); i0 = (i0 + 1)) {
    if (((WaveGetLaneIndex() & 1) == 0)) {
      result = (result + WaveActiveMin(result));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = ((16 << 6) | (i0 << 4));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
    if ((WaveGetLaneIndex() == 22)) {
      if ((WaveGetLaneIndex() == 12)) {
        result = (result + WaveActiveMax(result));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = ((26 << 6) | (i0 << 4));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
      for (uint i1 = 0; (i1 < 2); i1 = (i1 + 1)) {
        uint counter2 = 0;
        while ((counter2 < 2)) {
          counter2 = (counter2 + 1);
          if ((WaveGetLaneIndex() == 4)) {
            result = (result + WaveActiveSum(result));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = ((((48 << 6) | (i0 << 4)) | (i1 << 2)) | counter2);
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
        }
        if (((WaveGetLaneIndex() & 1) == 1)) {
          result = (result + WaveActiveMin(WaveGetLaneIndex()));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = (((57 << 6) | (i0 << 4)) | (i1 << 2));
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
      }
      if ((WaveGetLaneIndex() == 21)) {
        result = (result + WaveActiveMin(result));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = ((64 << 6) | (i0 << 4));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
    } else {
    for (uint i3 = 0; (i3 < 2); i3 = (i3 + 1)) {
      uint counter4 = 0;
      while ((counter4 < 2)) {
        counter4 = (counter4 + 1);
        if (((((WaveGetLaneIndex() == 7) || (WaveGetLaneIndex() == 10)) || (WaveGetLaneIndex() == 20)) || (WaveGetLaneIndex() == 29))) {
          result = (result + WaveActiveMin((WaveGetLaneIndex() + 5)));
          uint temp = 0;
          InterlockedAdd(_wave_op_index[0], 3, temp);
          _participant_bit[temp] = ((((100 << 6) | (i0 << 4)) | (i3 << 2)) | counter4);
          uint4 ballot = WaveActiveBallot(1);
          _participant_bit[(temp + 1)] = ballot.x;
          _participant_bit[(temp + 2)] = ballot.y;
        }
      }
      if ((WaveGetLaneIndex() == 27)) {
        result = (result + WaveActiveSum(5));
        uint temp = 0;
        InterlockedAdd(_wave_op_index[0], 3, temp);
        _participant_bit[temp] = (((107 << 6) | (i0 << 4)) | (i3 << 2));
        uint4 ballot = WaveActiveBallot(1);
        _participant_bit[(temp + 1)] = ballot.x;
        _participant_bit[(temp + 2)] = ballot.y;
      }
    }
  }
  if (((WaveGetLaneIndex() & 1) == 0)) {
    result = (result + WaveActiveMax(4));
    uint temp = 0;
    InterlockedAdd(_wave_op_index[0], 3, temp);
    _participant_bit[temp] = ((116 << 6) | (i0 << 4));
    uint4 ballot = WaveActiveBallot(1);
    _participant_bit[(temp + 1)] = ballot.x;
    _participant_bit[(temp + 2)] = ballot.y;
  }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 600
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 6401, 537920640, 0, 6401, 537920640, 0, 6401, 537920640, 0, 6401, 537920640, 0, 6402, 537920640, 0, 6402, 537920640, 0, 6402, 537920640, 0, 6402, 537920640, 0, 6405, 537920640, 0, 6405, 537920640, 0, 6405, 537920640, 0, 6405, 537920640, 0, 6406, 537920640, 0, 6406, 537920640, 0, 6406, 537920640, 0, 6406, 537920640, 0, 6417, 537920640, 0, 6417, 537920640, 0, 6417, 537920640, 0, 6417, 537920640, 0, 6418, 537920640, 0, 6418, 537920640, 0, 6418, 537920640, 0, 6418, 537920640, 0, 6421, 537920640, 0, 6421, 537920640, 0, 6421, 537920640, 0, 6421, 537920640, 0, 6422, 537920640, 0, 6422, 537920640, 0, 6422, 537920640, 0, 6422, 537920640, 0, 6848, 134217728, 0, 6852, 134217728, 0, 6864, 134217728, 0, 6868, 134217728, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1024, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 1040, 1431655765, 0, 6401, 537920640, 0, 6401, 537920640, 0, 6401, 537920640, 0, 6401, 537920640, 0, 6402, 537920640, 0, 6402, 537920640, 0, 6402, 537920640, 0, 6402, 537920640, 0, 6405, 537920640, 0, 6405, 537920640, 0, 6405, 537920640, 0, 6405, 537920640, 0, 6406, 537920640, 0, 6406, 537920640, 0, 6406, 537920640, 0, 6406, 537920640, 0, 6417, 537920640, 0, 6417, 537920640, 0, 6417, 537920640, 0, 6417, 537920640, 0, 6418, 537920640, 0, 6418, 537920640, 0, 6418, 537920640, 0, 6418, 537920640, 0, 6421, 537920640, 0, 6421, 537920640, 0, 6421, 537920640, 0, 6421, 537920640, 0, 6422, 537920640, 0, 6422, 537920640, 0, 6422, 537920640, 0, 6422, 537920640, 0, 6848, 134217728, 0, 6852, 134217728, 0, 6864, 134217728, 0, 6868, 134217728, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7424, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0, 7440, 1431655765, 0]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
