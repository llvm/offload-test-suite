#--- source.hlsl
RWStructuredBuffer<uint> _participant_bit : register(u0);
RWStructuredBuffer<uint> _wave_op_index : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  uint result = 0;
  for (uint i0 = 0; (i0 < 3); i0 = (i0 + 1)) {
    if ((WaveGetLaneIndex() < 6)) {
      result = (result + WaveActiveMin(result));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = ((14 << 6) | (i0 << 4));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
    uint counter1 = 0;
    while ((counter1 < 3)) {
      counter1 = (counter1 + 1);
      switch ((WaveGetLaneIndex() % 2)) {
      case 0: {
          if ((WaveGetLaneIndex() < 8)) {
            result = (result + WaveActiveSum(1));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((31 << 6) | (i0 << 4)) | (counter1 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
          break;
        }
      case 1: {
          if (((WaveGetLaneIndex() % 2) == 0)) {
            result = (result + WaveActiveSum(2));
            uint temp = 0;
            InterlockedAdd(_wave_op_index[0], 3, temp);
            _participant_bit[temp] = (((40 << 6) | (i0 << 4)) | (counter1 << 2));
            uint4 ballot = WaveActiveBallot(1);
            _participant_bit[(temp + 1)] = ballot.x;
            _participant_bit[(temp + 2)] = ballot.y;
          }
          break;
        }
      }
    }
    if ((WaveGetLaneIndex() >= 24)) {
      result = (result + WaveActiveMin(10));
      uint temp = 0;
      InterlockedAdd(_wave_op_index[0], 3, temp);
      _participant_bit[temp] = ((47 << 6) | (i0 << 4));
      uint4 ballot = WaveActiveBallot(1);
      _participant_bit[(temp + 1)] = ballot.x;
      _participant_bit[(temp + 2)] = ballot.y;
    }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_bit
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 468
  - Name: expected_bit_patterns
    Format: UInt32
    Stride: 4
    Data: [896, 63, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 1988, 85, 0, 1988, 85, 0, 1988, 85, 0, 1988, 85, 0, 1992, 85, 0, 1992, 85, 0, 1992, 85, 0, 1992, 85, 0, 1996, 85, 0, 1996, 85, 0, 1996, 85, 0, 1996, 85, 0, 2004, 85, 0, 2004, 85, 0, 2004, 85, 0, 2004, 85, 0, 2008, 85, 0, 2008, 85, 0, 2008, 85, 0, 2008, 85, 0, 2012, 85, 0, 2012, 85, 0, 2012, 85, 0, 2012, 85, 0, 2020, 85, 0, 2020, 85, 0, 2020, 85, 0, 2020, 85, 0, 2024, 85, 0, 2024, 85, 0, 2024, 85, 0, 2024, 85, 0, 2028, 85, 0, 2028, 85, 0, 2028, 85, 0, 2028, 85, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 896, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 912, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 928, 63, 0, 1988, 85, 0, 1988, 85, 0, 1988, 85, 0, 1988, 85, 0, 1992, 85, 0, 1992, 85, 0, 1992, 85, 0, 1992, 85, 0, 1996, 85, 0, 1996, 85, 0, 1996, 85, 0, 1996, 85, 0, 2004, 85, 0, 2004, 85, 0, 2004, 85, 0, 2004, 85, 0, 2008, 85, 0, 2008, 85, 0, 2008, 85, 0, 2008, 85, 0, 2012, 85, 0, 2012, 85, 0, 2012, 85, 0, 2012, 85, 0, 2020, 85, 0, 2020, 85, 0, 2020, 85, 0, 2020, 85, 0, 2024, 85, 0, 2024, 85, 0, 2024, 85, 0, 2024, 85, 0, 2028, 85, 0, 2028, 85, 0, 2028, 85, 0, 2028, 85, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3008, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3024, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0, 3040, 4278190080, 0]
  - Name: _wave_op_index
    Format: UInt32
    Stride: 4
    Data: [0]
Results:
  - Result: BitTrackingValidation
    Rule: BufferParticipantPattern
    GroupSize: 3
    Actual: _participant_bit
    Expected: expected_bit_patterns
DescriptorSets:
  - Resources:
    - Name: _participant_bit
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: _wave_op_index
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
